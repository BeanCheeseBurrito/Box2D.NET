<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Library</OutputType>
        <TargetFramework>netstandard2.1</TargetFramework>

        <!-- This is project for holding natives only so we dont really want to generate anything else -->
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <IncludeSymbols>false</IncludeSymbols>
        <IncludeBuildFiles>false</IncludeBuildFiles>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <MSBuildEnableWorkloadResolver>false</MSBuildEnableWorkloadResolver>
        <NoWarn>$(NoWarn);CS2008;NU5128</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <Description>Native libraries for Box2D</Description>
    </PropertyGroup>

    <!-- We want 2 separate natives packages for debug and release modes -->
    <PropertyGroup>
        <ZigConfiguration Condition="'$(Configuration)' == 'Debug'">Debug</ZigConfiguration>
        <ZigConfiguration Condition="'$(Configuration)' == 'Release'">ReleaseFast</ZigConfiguration>
    </PropertyGroup>

    <!-- Fallback to host runtime when not specified -->
    <PropertyGroup>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">$(HostRuntime)</RuntimeIdentifier>
    </PropertyGroup>

    <!-- These files will be auto included based on platform in dependant projects -->
    <ItemGroup>
        <None Pack="true" Include="buildTransitive/Box2D.NET.Native.props" PackagePath="buildTransitive/$(PackageId).props"/>
        <None Pack="true" Include="buildTransitive/Box2D.NET.Native.targets" PackagePath="buildTransitive/$(PackageId).targets"/>
        <None Pack="true" Include="$(OutputPath)runtimes/**/*.a;$(OutputPath)runtimes/**/*.lib" PackagePath="static/"/>
        <None Pack="true" Include="$(OutputPath)runtimes/**/**" Exclude="$(OutputPath)runtimes/**/*.a;$(OutputPath)runtimes/**/*.lib" PackagePath="runtimes/"/>
        <None Include="$(OutputPath)runtimes/$(HostRuntime)/**" Exclude="$(OutputPath)runtimes/**/*.a;$(OutputPath)runtimes/**/*.lib" Link="%(Filename)%(Extension)" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>

    <!-- Here we need host not target toolset to compile/cross-compile -->
    <ItemGroup>
        <PackageReference Include="Microsoft.NET.Runtime.Emscripten.3.1.56.Cache.$(HostRuntime)" Version="9.0.5" PrivateAssets="all"/>
        <PackageReference Include="Vezel.Zig.Toolsets.$(HostRuntime)" Version="0.14.0.1" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" PrivateAssets="all"/>
    </ItemGroup>

    <!-- Import needed for the $(WasmCachePath) property -->
    <Import Project="$(NuGetPackageRoot)/microsoft.net.runtime.emscripten.3.1.56.cache.$(HostRuntime)/9.0.5/Sdk/Sdk.props"/>

    <PropertyGroup>
        <EMSCRIPTEN_CACHE_SYSROOT Condition="$(EMSCRIPTEN_CACHE_SYSROOT) == ''" >$(WasmCachePath)sysroot</EMSCRIPTEN_CACHE_SYSROOT>
    </PropertyGroup>

    <!-- Determine mapping between dotnet RID and zig targets -->
    <Choose>
        <When Condition="$(RuntimeIdentifier) == 'win-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-x86'">
            <PropertyGroup>
                <ZigIdentifier>x86-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-arm'">
            <PropertyGroup>
                <ZigIdentifier>arm-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-x86'">
            <PropertyGroup>
                <ZigIdentifier>x86-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-arm'">
            <PropertyGroup>
                <ZigIdentifier>arm-linux-gnueabihf</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'osx-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-macos</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'osx-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-macos</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'iossimulator-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-ios-simulator</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(IOS_SIMULATOR_SDK_SYSROOT)"</ZigArgs>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'iossimulator-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-ios-simulator</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(IOS_SIMULATOR_SDK_SYSROOT)" -Dcpu=apple_m1</ZigArgs>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'ios-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-ios</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(IOS_SDK_SYSROOT)"</ZigArgs>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'browser-wasm'">
            <PropertyGroup>
                <ZigIdentifier>wasm32-emscripten</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(EMSCRIPTEN_CACHE_SYSROOT)"</ZigArgs>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'android-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-linux-android.21</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(ANDROID_NDK_SYSROOT)"</ZigArgs>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'android-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-linux-android.21</ZigIdentifier>
                <ZigArgs>-Dsysroot="$(ANDROID_NDK_SYSROOT)"</ZigArgs>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <ZigIdentifier>$(RuntimeIdentifier)</ZigIdentifier>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- All the native code compile magic lives here -->
    <Target Name="CompileNatives" AfterTargets="Build" Condition="'$(SkipNatives)' != 'true'">
        <PropertyGroup>
            <BuildCommand>$(ZigExePath) build -Doptimize=$(ZigConfiguration) --prefix $(OutputPath)runtimes --prefix-lib-dir $(RuntimeIdentifier)/native --prefix-exe-dir $(RuntimeIdentifier)/native -Dtarget=$(ZigIdentifier) -Dcompiler-rt-path="$(ZigLibPath)compiler_rt.zig" $(ZigArgs)</BuildCommand>
        </PropertyGroup>
        <Message Importance="High" Text="Build Target: $(RuntimeIdentifier) $(Configuration)"/>
        <Message Importance="High" Text="Build Zig Target: $(ZigIdentifier) $(ZigConfiguration)"/>
        <Message Importance="High" Text="Build Zig Args: $(ZigArgs)"/>
        <Exec Command="$(BuildCommand) -Dlibrary-type=Shared" Condition="'$(RuntimeIdentifier)' != 'browser-wasm'"/>
        <Exec Command="$(BuildCommand) -Dlibrary-type=Static"/>
    </Target>
</Project>
